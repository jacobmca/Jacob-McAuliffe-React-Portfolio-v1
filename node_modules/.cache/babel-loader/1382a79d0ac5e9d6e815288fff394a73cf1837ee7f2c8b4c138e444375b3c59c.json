{"ast":null,"code":"var _jsxFileName = \"/Users/jacobmcauliffe/Documents/Bootcamp/20-React/Jacob-McAuliffe-React-Portfolio-v1/src/components/pages/Contact.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    },\n    trigger\n  } = useForm();\n  const [disabled, setDisabled] = useState(false);\n  const [alertInfo, setAlertInfo] = useState({\n    display: false,\n    message: '',\n    type: ''\n  });\n  const toggleAlert = (message, type) => {\n    setAlertInfo({\n      display: true,\n      message,\n      type\n    });\n    setTimeout(() => {\n      setAlertInfo({\n        display: false,\n        message: '',\n        type: ''\n      });\n    }, 5000);\n  };\n  const onSubmit = async data => {\n    const {\n      name,\n      email,\n      subject,\n      message\n    } = data;\n    try {\n      setDisabled(true);\n      const templateParams = {\n        name,\n        email,\n        subject,\n        message\n      };\n      await emailjs.send(process.env.REACT_APP_SERVICE_ID, process.env.REACT_APP_TEMPLATE_ID, templateParams, process.env.REACT_APP_PUBLIC_KEY);\n      toggleAlert('Form submission was successful!', 'success');\n    } catch (e) {\n      console.error(e);\n      toggleAlert('Uh oh. Something went wrong.', 'danger');\n    } finally {\n      setDisabled(false);\n      reset(); // This will now work\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-class ContactForm\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contactForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"contact-form\",\n              noValidate: true,\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row formRow\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"contact-me\",\n                    children: \"Contact Me!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"name\"\n                    // Added conditional class for error handling\n                    ,\n                    className: `form-control formInput ${errors.name ? 'is-invalid' : ''}`,\n                    placeholder: \"Name\"\n                    // Added custom error message for required validation\n                    ,\n                    ...register('name', {\n                      required: 'Name is required'\n                    }),\n                    onBlur: () => trigger('name') // Trigger validation onBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 21\n                  }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback\",\n                    children: errors.name.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    name: \"email\"\n                    // Added conditional class for error handling\n                    ,\n                    className: `form-control formInput ${errors.email ? 'is-invalid' : ''}`,\n                    placeholder: \"Email address\"\n                    // Added custom error message and pattern validation for email\n                    ,\n                    ...register('email', {\n                      required: 'Email is required',\n                      pattern: {\n                        value: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n                        message: 'Enter a valid email address'\n                      }\n                    }),\n                    onBlur: () => trigger('email') // Trigger validation onBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 21\n                  }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback\",\n                    children: errors.email.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 38\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row formRow\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    rows: 3,\n                    name: \"message\"\n                    // Added conditional class for error handling\n                    ,\n                    className: `form-control formInput contact-spacing ${errors.message ? 'is-invalid' : ''}`,\n                    placeholder: \"Type Your Message Here\"\n                    // Added custom error message for required validation\n                    ,\n                    ...register('message', {\n                      required: 'Message is required'\n                    }),\n                    onBlur: () => trigger('message') // Trigger validation onBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 21\n                  }, this), errors.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback\",\n                    children: errors.message.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 40\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submit-btn submit\",\n                type: \"submit\",\n                disabled: disabled,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), alertInfo.display && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `alert alert-${alertInfo.type} alert-dismissible mt-5`,\n              role: \"alert\",\n              children: [alertInfo.message, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn-close\",\n                \"data-bs-dismiss\": \"alert\",\n                \"aria-label\": \"Close\",\n                onClick: () => setAlertInfo({\n                  display: false,\n                  message: '',\n                  type: ''\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"GUVtnC299L5xcnLt+FUa+0xPPpI=\", false, function () {\n  return [useForm];\n});\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useForm","useState","emailjs","jsxDEV","_jsxDEV","Contact","_s","register","handleSubmit","reset","formState","errors","trigger","disabled","setDisabled","alertInfo","setAlertInfo","display","message","type","toggleAlert","setTimeout","onSubmit","data","name","email","subject","templateParams","send","process","env","REACT_APP_SERVICE_ID","REACT_APP_TEMPLATE_ID","REACT_APP_PUBLIC_KEY","e","console","error","className","children","id","noValidate","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","required","onBlur","pattern","value","rows","role","onClick","_c","$RefreshReg$"],"sources":["/Users/jacobmcauliffe/Documents/Bootcamp/20-React/Jacob-McAuliffe-React-Portfolio-v1/src/components/pages/Contact.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport emailjs from 'emailjs-com';\n\nfunction Contact() {\n  const { register, handleSubmit, reset, formState: { errors }, trigger } = useForm();\n  const [disabled, setDisabled] = useState(false);\n  const [alertInfo, setAlertInfo] = useState({\n    display: false,\n    message: '',\n    type: '',\n  });\n\n  const toggleAlert = (message, type) => {\n    setAlertInfo({ display: true, message, type });\n\n    setTimeout(() => {\n      setAlertInfo({ display: false, message: '', type: '' });\n    }, 5000);\n  };\n\n  const onSubmit = async (data) => {\n    const { name, email, subject, message } = data;\n    try {\n      setDisabled(true);\n\n      const templateParams = {\n        name,\n        email,\n        subject,\n        message,\n      };\n\n      await emailjs.send(\n        process.env.REACT_APP_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        templateParams,\n        process.env.REACT_APP_PUBLIC_KEY\n      );\n\n      toggleAlert('Form submission was successful!', 'success');\n    } catch (e) {\n      console.error(e);\n      toggleAlert('Uh oh. Something went wrong.', 'danger');\n    } finally {\n      setDisabled(false);\n      reset(); // This will now work\n    }\n  };\n\n  return (\n    <div className='contact-class ContactForm'>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-12 text-center'>\n            <div className='contactForm'>\n              <form id='contact-form' noValidate onSubmit={handleSubmit(onSubmit)}>\n                <div className='row formRow'>\n                  <div className=\"mb-4\">\n                    <h1 className=\"contact-me\">Contact Me!</h1>\n                  </div>\n                  <div className='col-6'>\n                    <input\n                      type='text'\n                      name='name'\n                      // Added conditional class for error handling\n                      className={`form-control formInput ${errors.name ? 'is-invalid' : ''}`}\n                      placeholder='Name'\n                      // Added custom error message for required validation\n                      {...register('name', { required: 'Name is required' })}\n                      onBlur={() => trigger('name')} // Trigger validation onBlur\n                    />\n                    {/* Added this conditional rendering for error message display */}\n                    {errors.name && <div className=\"invalid-feedback\">{errors.name.message}</div>}\n                  </div>\n                  <div className='col-6'>\n                    <input\n                      type='email'\n                      name='email'\n                      // Added conditional class for error handling\n                      className={`form-control formInput ${errors.email ? 'is-invalid' : ''}`}\n                      placeholder='Email address'\n                      // Added custom error message and pattern validation for email\n                      {...register('email', {\n                        required: 'Email is required',\n                        pattern: {\n                          value: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n                          message: 'Enter a valid email address',\n                        },\n                      })}\n                      onBlur={() => trigger('email')} // Trigger validation onBlur\n                    />\n                    {/* Added this conditional rendering for error message display */}\n                    {errors.email && <div className=\"invalid-feedback\">{errors.email.message}</div>}\n                  </div>\n                </div>\n                <div className='row formRow'>\n                  <div className='col'>\n                    <textarea\n                      rows={3}\n                      name='message'\n                      // Added conditional class for error handling\n                      className={`form-control formInput contact-spacing ${errors.message ? 'is-invalid' : ''}`}\n                      placeholder='Type Your Message Here'\n                      // Added custom error message for required validation\n                      {...register('message', { required: 'Message is required' })}\n                      onBlur={() => trigger('message')} // Trigger validation onBlur\n                    />\n                    {/* Added this conditional rendering for error message display */}\n                    {errors.message && <div className=\"invalid-feedback\">{errors.message.message}</div>}\n                  </div>\n                </div>\n                <button className='submit-btn submit' type='submit' disabled={disabled}>\n                  Submit\n                </button>\n              </form>\n              {alertInfo.display && (\n                <div\n                  className={`alert alert-${alertInfo.type} alert-dismissible mt-5`}\n                  role='alert'\n                >\n                  {alertInfo.message}\n                  <button\n                    type='button'\n                    className='btn-close'\n                    data-bs-dismiss='alert'\n                    aria-label='Close'\n                    onClick={() =>\n                      setAlertInfo({ display: false, message: '', type: '' })\n                    }\n                  ></button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}